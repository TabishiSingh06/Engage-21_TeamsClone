{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tabis\\\\OneDrive\\\\Desktop\\\\Engage-21_TeamsClone\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io('http://localhost:5000');\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [stream, setStream] = useState(null);\n  const [me, setMe] = useState('');\n  const [call, setCall] = useState(null);\n  const [callAccepted, setcallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(id => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id));\n    socket.on('calluser', ({\n      from,\n      name: callername,\n      signal\n    }) => {\n      setCall({\n        isReceivedCall: true,\n        from,\n        name: callername,\n        signal\n      });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setcallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callaccepted', signal => {\n      setcallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"NC3ALSDQ5CbeCK5twvxEL0wZ43w=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/tabis/OneDrive/Desktop/Engage-21_TeamsClone/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","socket","ContextProvider","children","stream","setStream","me","setMe","call","setCall","callAccepted","setcallAccepted","callEnded","setCallEnded","name","setName","myVideo","userVideo","connectionRef","id","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","from","callername","signal","isReceivedCall","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState(null);\r\n    const [callAccepted, setcallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n\r\n\r\n    useEffect((id) => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                myVideo.current.srcObject = currentStream;\r\n            });\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('calluser', ({ from, name: callername, signal }) => {\r\n            setCall({ isReceivedCall: true, from, name: callername, signal })\r\n        });\r\n    }, []);\r\n\r\n    const answerCall = () => {\r\n        setcallAccepted(true)\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n    const callUser = (id) => {\r\n\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted', (signal) => {\r\n            setcallAccepted(true);\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n\r\n    }\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call, callAccepted, myVideo, userVideo, stream, name, setName, callEnded, me, callUser, leaveCall, answerCall,\r\n        }}>\r\n            {children}\r\n\r\n        </SocketContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport { ContextProvider, SocketContext }"]},"metadata":{},"sourceType":"module"}