{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tabis\\\\OneDrive\\\\Desktop\\\\Engage-21_TeamsClone\\\\client\\\\src\\\\SocketContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(); // const socket = io('http://localhost:5000');\n\nconst socket = io('https://warm-wildwood-81069.herokuapp.com');\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      console.log(myVideo);\n      myVideo.het(0).current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id));\n    socket.on('callUser', ({\n      from,\n      name: callerName,\n      signal\n    }) => {\n      setCall({\n        isReceivingCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answerCall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('callUser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callAccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"WCD8xviLUIbJyClSRV/B7JoiY/M=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/tabis/OneDrive/Desktop/Engage-21_TeamsClone/client/src/SocketContext.js"],"names":["React","createContext","useState","useRef","useEffect","io","Peer","SocketContext","socket","ContextProvider","children","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","console","log","het","current","srcObject","on","id","from","callerName","signal","isReceivingCall","answerCall","peer","initiator","trickle","data","emit","to","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload"],"mappings":"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","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\n// const socket = io('http://localhost:5000');\r\nconst socket = io('https://warm-wildwood-81069.herokuapp.com');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [stream, setStream] = useState();\r\n    const [name, setName] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [me, setMe] = useState('');\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);\r\n                console.log(myVideo);\r\n                myVideo.het(0).current.srcObject = currentStream;\r\n            });\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('callUser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivingCall: true, from, name: callerName, signal });\r\n        });\r\n    }, []);\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callAccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        });\r\n\r\n        connectionRef.current = peer;\r\n    };\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n\r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            call,\r\n            callAccepted,\r\n            myVideo,\r\n            userVideo,\r\n            stream,\r\n            name,\r\n            setName,\r\n            callEnded,\r\n            me,\r\n            callUser,\r\n            leaveCall,\r\n            answerCall,\r\n        }}\r\n        >\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};\r\n\r\nexport { ContextProvider, SocketContext };"]},"metadata":{},"sourceType":"module"}